exit
user_players
exit
params
exit
request.headers["user"]
exit
request.headers["user"]
exit
request.headers["user"]
exit
request.headers["user"]
exit
request.headers["user"]
user_players
exit
request.headers["user"]
exit
request.headers["user"]
exit
request.headers["user"]
exit
request.headers["user"]
request.headers["userId"]
request.headers
request
headers
params
exit
player
continue
Player.update_bought_player_quantity_and_value(params[:qty], player)
player = Player.find_by(playerId: params[:playerId])
continue
Player.update_bought_player_quantity_and_value(params[:qty], player)
player = Player.find_by(playerId: params[:playerId])
continue
params
params[:price]
params[:qty]
params[:playerId]
params[:id]
params
c
Player.find(2)
c
continue
Player.find(2)
Player.first
c
exit
priced_player.player_average.points
priced_player.player_average.pts
priced_player.player_average
priced_player.player_averages
priced_player
c
priced_player
c
active_players.length
active_players
continue
PlayerAverage.where.not(min: "NaN").where("min > 20")
PlayerAverage.where.not(min: "NaN").where("min > 20").length
PlayerAverage.where.not(min: "NaN").where("min > 20")
PlayerAverage.where.not(min: "NaN").length
PlayerAverage.where.not(min: "NaN")
PlayerAverage.where.not(min: "NaN", min:  20).length
PlayerAverage.where.not(min: "NaN", min:  20)
PlayerAverage.where.not(min: "NaN", min: < 20)
PlayerAverage.where.not(min: "NaN").map{|m| m.min}
PlayerAverage.where.not(min: "NaN")
PlayerAverage.all.where("min = double precision NaN")
PlayerAverage.all.where("NaN = double precision NaN")
PlayerAverage.all.where("min > 20 AND min = false")
PlayerAverage.all.where("min > 20 AND min = NaN")
PlayerAverage.all.where("min > 20 AND min =  NaN")
PlayerAverage.all.where("min = NaN")
PlayerAverage.all.where("min === NaN")
PlayerAverage.all.where("min > 20").length
PlayerAverage.all.find
PlayerAverage.all.find_by(min: > 20)
PlayerAverage.all.where("min > 20")
Player.first.statistics
Player.first.statistic
Player.first
PlayerAverage.all.where("min === NaN")
PlayerAverage.all.where("min = NaN")
PlayerAverage.all.where("min = 20")
PlayerAverage.all.where("min > 20").length
PlayerAverage.all.where("min = NaN")
PlayerAverage.all.where("min > 20")
PlayerAverage.all.where("min > 20 AND min ==== true")
PlayerAverage.all.where("min > 20 AND min ==== false")
PlayerAverage.all.where("min > 20 AND min != false")
PlayerAverage.all.where("min > 20 AND min ===  NaN")
PlayerAverage.all.where("min > 20 AND min !== NaN")
PlayerAverage.all.where("min > 20 AND min != NaN")
PlayerAverage.all.where(min: 20)
PlayerAverage.all.where(min: > 20)
PlayerAverage.all.where(min: != NaN, min: > 20)
PlayerAverage.all.where(min: != NaN, "min > 20")
PlayerAverage.all.where(min != NaN, "min > 20")
PlayerAverage.all.where("min > 20", "min != NaN").length
PlayerAverage.all.where("min > 20", "min != NaN")
PlayerAverage.all.where("min > 20 && != NaN")
players.map {|p| p.min}
players.all
players.find(4)
players.length
players
continue
player.player_average.min > 0
player.player_average.min > 20
player.player_average.min
player.player_average
Player.statistics
Player.player_average
player
continue
Player.find(2).player_average
Player.find(2)
c
existing_player
c
d
existing_player
exit
player.player_average.min
.min
player.player_average
player
